name: monitor-production

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 21 * * Tue,Wed,Thu"

jobs:
  monitoring-execution:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java and Gradle
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clean and prepare environment
        run: gradle clean clearReports

      - name: Run Serenity tests
        id: run-tests
        run: |
          gradle test --tests TestRunnerProduction || echo "tests_failed=true" >> $GITHUB_ENV

      - name: Generate reports
        run: gradle reports

      - name: List files in workspace
        run: ls -alh

      - name: List files in a specific directory
        run: ls -alh target/site/serenity

      - name: Set current date and time
        id: date
        run: echo "current_date=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Calculate file size in bytes
        id: calculate-size
        run: |
          FILE="target/site/serenity/serenity-summary.html"
          if [ -f "$FILE" ]; then
            SIZE=$(stat --format=%s "$FILE")
            echo "file_size=$SIZE" >> $GITHUB_ENV
          else
            echo "File not found: $FILE"
            exit 1
          fi

      - name: Get Slack upload URL
        run: |
          # Usa la variable file_size que calculaste anteriormente
          response=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.SLACK_TOKEN }}" \
            -H "Content-Type: application/x-www-form-urlencoded; charset=utf-8" \
            -d "filename=serenity-summary.html" \
            -d "length=${{ env.file_size }}" \
            https://slack.com/api/files.getUploadURLExternal)
          
          echo "$response"
          
          # Extrae la URL de carga de la respuesta
          upload_url=$(echo "$response" | jq -r '.upload_url')
          
          # Verifica si se obtuvo correctamente la URL de carga
          if [ "$upload_url" == "null" ]; then
            echo "Error fetching upload URL: $response"
            exit 1
          fi

          # Guarda la URL de carga para usarla en los siguientes pasos
          echo "upload_url=$upload_url" >> $GITHUB_ENV

      - name: Upload file to Slack
        run: |
          curl -X PUT \
            -H "Content-Type: text/html" \
            --data-binary @target/site/serenity/serenity-summary.html \
            "${{ env.upload_url }}"

      - name: Complete Slack upload
        run: |
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.SLACK_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"files":[{"id":"'"$(basename "${{ env.upload_url }}")"'"}]}' \
            https://slack.com/api/files.completeUploadExternal
