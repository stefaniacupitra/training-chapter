name: NASA Images Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  download-nasa-images:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository to access the dates.json file
      - name: Checkout repository
        uses: actions/checkout@v3
      
      # 2. Set up Node.js environment for processing the JSON file
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      # 3. Install curl to make the HTTP requests (in case it's not installed)
      - name: Install curl
        run: sudo apt-get install -y curl
      
      # 4. Read dates from the JSON file and fetch the images in parallel
      - name: Fetch NASA images
        id: fetch-images
        run: |
          # Path to the dates.json file
          DATES_FILE="dates.json"
          
          # Check if dates file exists
          if [ ! -f "$DATES_FILE" ]; then
            echo "File not found: $DATES_FILE"
            exit 1
          fi
          
          # Read the dates from the JSON file
          DATES=$(cat "$DATES_FILE" | jq -r '.dates[]')
          
          # Prepare the cache directory
          CACHE_DIR=".cache"
          mkdir -p "$CACHE_DIR"
          
          # Iterate over each date in the JSON file
          for DATE in $DATES; do
            CACHE_FILE="$CACHE_DIR/$DATE.json"
          
            # Check cache first
            if [ -f "$CACHE_FILE" ]; then
              echo "Cache hit for $DATE. Skipping API call."
              RESPONSE=$(cat "$CACHE_FILE")
            else
              echo "Fetching image for $DATE..."
              # Perform the GET request to NASA API
              RESPONSE=$(curl -s "https://api.nasa.gov/planetary/apod?api_key=${{ secrets.NASA_API_KEY }}&date=$DATE")
          
              # Save the response in cache
              echo "$RESPONSE" > "$CACHE_FILE"
            fi
          
            # Extract the image URL
            IMAGE_URL=$(echo "$RESPONSE" | jq -r '.url')
          
            # Download the image
            IMAGE_NAME="img-$DATE.jpg"
            curl -s -o "$IMAGE_NAME" "$IMAGE_URL"
          
            # Export the image as an artifact
            echo "Uploading artifact for $DATE..."
            echo "::set-output name=image_$DATE::$IMAGE_NAME"
          done
      
      # 5. Upload the images as artifacts
      - name: Upload images as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: NASA Images
          path: |
            img-*.jpg
          retention-days: 1
