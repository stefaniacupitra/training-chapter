name: NASA Images Pipeline

on:
  push:
    branches:
      - test/**
  workflow_dispatch:

jobs:
  descargar-imagenes-de-la-NASA:
    runs-on: ubuntu-latest

    steps:
      # 1. Consulte el repositorio para acceder al archivo dates.json
      - name: Repositorio de pago
        uses: actions/checkout@v3
      
      # 2. Configurar el entorno Node.js para procesar el archivo JSON
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      # 3. Instalar curl para realizar las solicitudes HTTP (en caso de que no esté instalado)
      - name: Instalar curl
        run: sudo apt-get install -y curl
      
      # 4. Leer fechas del archivo JSON y obtener las imágenes en paralelo
      - name: Obtener imágenes de la NASA
        id: fetch-images
        run: |
          # Ruta al archivo dates.json
          DATES_FILE="dates.json"
          
          # Comprobar si existe el archivo de fechas
          if [ ! -f "$DATES_FILE" ]; then
            echo "Archivo no encontrado: $DATES_FILE"
            exit 1
          fi
          
          # Leer las fechas del archivo JSON
          DATES=$(cat "$DATES_FILE" | jq -r '.dates[]')
          
          # Preparar el directorio de caché
          CACHE_DIR=".cache"
          mkdir -p "$CACHE_DIR"
          
          # Iterar sobre cada fecha en el archivo JSON
          for DATE in $DATES; do
            CACHE_FILE="$CACHE_DIR/$DATE.json"
          
            # Primero verifique el caché
            if [ -f "$CACHE_FILE" ]; then
              echo "Se ha encontrado un error en la caché para $DATE. Se omite la llamada a la API."
              RESPONSE=$(cat "$CACHE_FILE")
            else
              echo "Obteniendo imagen para $DATE..."
              # Realizar la solicitud GET a la API de la NASA
              RESPONSE=$(curl -s "https://api.nasa.gov/planetary/apod?api_key=${{ secrets.NASA_API_KEY }}&date=$DATE")
          
              # Guardar la respuesta en caché
              echo "$RESPONSE" > "$CACHE_FILE"
            fi
          
            # Extraer la URL de la imagen
            IMAGE_URL=$(echo "$RESPONSE" | jq -r '.url')
          
            # Descargar la imagen
            IMAGE_NAME="img-$DATE.jpg"
            curl -s -o "$IMAGE_NAME" "$IMAGE_URL"
          
            # Exportar la imagen como un artefacto
            echo "Cargando artefacto para $DATE..."
            echo "::set-output name=image_$DATE::$IMAGE_NAME"
          done
      
      # 5. Subir las imágenes como artefactos
      - name: Subir imágenes como artefactos
        uses: actions/upload-artifact@v3
        with:
          name: Imágenes de la NASA
          path: |
            img-*.jpg
          retention-days: 1
